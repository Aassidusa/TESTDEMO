<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chen.lushen.dao.UserDao" >
  <resultMap id="BaseResultMap" type="chen.lushen.enitiy.User" >
    <id column="account" property="account" jdbcType="VARCHAR" />
    <result column="phonenumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    account, phonenumber, password, username, realname, gender, email, address
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from user
    where account = #{account,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from user
    where account = #{account,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="chen.lushen.enitiy.User" >
    insert into user (account, phonenumber, password, 
      username, realname, gender, 
      email, address)
    values (#{account,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{username,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{gender,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="chen.lushen.enitiy.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        account,
      </if>
      <if test="phonenumber != null" >
        phonenumber,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="address != null" >
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="chen.lushen.enitiy.User" >
    update user
    <set >
      <if test="phonenumber != null" >
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where account = #{account,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="chen.lushen.enitiy.User" >
    update user
    set phonenumber = #{phonenumber,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR}
    where account = #{account,jdbcType=VARCHAR}
  </update>
</mapper>